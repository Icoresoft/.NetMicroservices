version: '3.4'
#docker-compose -p projectname -up -d 
#docker run -d -p host:container --name ContainerName ImageName
services:
  #docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest

  #user => admin - password=>##P@$$w0rd##
  portainer: #managing and monitoring container tool
    container_name: portainer #portainer-ce portainer-be 
    restart: always
    ports:
     - "8080:8000"
     - "9000:9000"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - portainer_data:/data

  pgadmin: # postgres admininstration
    container_name: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@poc.com
      - PGADMIN_DEFAULT_PASSWORD=12345
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  catalogdb:
  #this is container name which acts as server or machine name which will be used to connect to database
    container_name: catalogdb-server #mongo
    restart: always
    ports:
    # Host:Container
      - "27017:27017"
    volumes:
      - catalogdb-data:/data/db
  catalog.api:
    container_name: catalog.api 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DbSettings:ServerName=catalogdb-server"
      - "DbSettings:PortNo=27017"
      - "DbSettings:DbName=catalogdb"
      #- DbSettings__ServerName=catalogdb-server #server name is database container name
      #container exposed port number 
      #- DbSettings__PortNo=27017 
      #- DbSettings__DBName=catalogdb
      - DbSettings__UserName=""
      - DbSettings__Password=""
    ports:
    # Host:Container
      - "8000:80" 
    depends_on:
      - catalogdb #catalog.api service depends on catalogdb service

#Basket Services
  basketdb:
    #this is container name which acts as server or machine name which will be used to connect to database
    container_name: basketdb-server #redis
    restart: always
    ports:
    # Host:Container
      - "6379:6379"
  
  basket.api:
    container_name: basket.api 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DbSettings:ServerName=basketdb-server"
      - "DbSettings:PortNo=6379"
      - "GrpcService:Address=http://discount.grpc:80"
    ports:
      - "8001:80"
    depends_on:
      - basketdb

  discountdb:
    container_name: discountdb-server
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=DiscountDb
    volumes:
      - postgres_data:/var/lib/postgres/data/ 

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DbSettings:ServerName=discountdb-server"
      - "DbSettings:Port=5432"
      - "DbSettings:DbName=DiscountDb"
      - "DbSettings:UserName=admin"
      - "DbSettings:Passowrd=admin"
    ports:
      - "8002:80"
    depends_on:
      - discountdb

  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DbSettings:ServerName=discountdb-server"
      - "DbSettings:Port=5432"
      - "DbSettings:DbName=DiscountDb"
      - "DbSettings:UserName=admin"
      - "DbSettings:Password=admin"
    ports:
      - "8003:80"
    depends_on:
      - discountdb 
  orderdb:
    container_name: orderdb-server
    environment:
     #- MSSQL_SA_PASSWORD=#DBP@$$$$w0rd#
     - SA_PASSWORD=#DBP@$$$$w0rd#
     - ACCEPT_EULA=Y
    restart: always
    ports:
      - "11433:1433"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DbSettings:ServerName=orderdb-server"
      - "DbSettings:Port=1433"
      - "DbSettings:DbName=OrderDb"
      - "DbSettings:UserName=sa"
      - "DbSettings:Password=#DBP@$$$$w0rd#"
      #- ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "8004:80"
    depends_on:
      - orderdb

  rabbitmq:
    container_name: rabbitmq-server
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: always

    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
